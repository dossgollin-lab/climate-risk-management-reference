# Statistics Without the Agonizing Details ✏️ {.unnumbered}

## Learning Objectives {.unnumbered}

- Compare simulation-based and parametric statistical tests
- Understand the logic of permutation testing
- Apply computational methods to hypothesis testing
- Interpret p-values through simulation

In this class we will use computation and simulation to build fundamental insight into statistical processes without dwelling on “agonizing” details. Here we implement the excellent example problem from John Rauser. First, watch the video:

<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/5Dnw46eC-0o?si=3Y3JKwkwD9i6lrVV" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

We will recreate his analysis to answer the fundamental question:

> Does drinking beer reduce the likelihood of being bitten by mosquitos?

## Data

First, we will create the data. Here is the data for the beer drinkers:

```{julia}
#| output: false
#| code-fold: true
beer = [
	27, 20, 21, 26, 27, 31, 24, 21, 20, 19, 23, 24, 28, 19, 24, 29, 18, 20, 17, 31, 20, 25, 28, 21, 27,
]
```

Using Julia, we can learn more about the data through exploratory analysis.

```{julia}
typeof(beer)
length(beer)
size(beer)
sum(beer) / length(beer) # the sample average
```

We can do the same for water drinkers:

```{julia}
#| code-fold: true
#| output: false
water = [21, 22, 15, 12, 21, 16, 19, 15, 22, 24, 19, 23, 13, 22, 20, 24, 18, 20]
```

## A simple analysis

Following Rauser, let’s calculate the difference between the average number of bites in each group.

```{julia}
#| output: false
using StatsBase: mean
observed_diff = mean(beer) - mean(water)
observed_diff
```

## The skeptic’s argument

The skeptic asks whether this might be random chance.

1. We could answer this with a $T$ test:
    - Determine if there is a significant difference between the means of two groups
    - Assumes (approximate) normality
    - Assumptions hidden behind a software package
2. Simulation approach:
    - Suppose the skeptic is right – the two groups are sampled from the same distribution
    - Shuffle the data (randomly divide into two groups by assuming that there is no difference between the two groups)
    - Calculate the difference between each group
    - Repeat many times and examine the distribution of differences

### Implementation

We can code up the simulation approach in Julia.

```{julia}
#| output: false
using Random: shuffle

function get_shuffled_difference(y1, y2)
	y_all = vcat(y1, y2)
	y_shuffled = shuffle(y_all)
	N1 = length(y1)
	ynew1 = y_shuffled[1:N1]
	ynew2 = y_shuffled[(N1+1):end]
	difference = mean(ynew1) - mean(ynew2)
	return difference
end

get_shuffled_difference(beer, water)
```

We want to learn about the *sampling distribution* of the group differences: repeat this experiment many times over and plot the results.

```{julia}
simulated_diffs = [get_shuffled_difference(beer, water) for i in 1:50_000]
length(simulated_diffs)
```

### Plotting

```{julia}
using CairoMakie

#| label: fig-plot-diffs
function plot_diffs(diffs, obs)
	fig = Figure()
	ax = Axis(fig[1, 1], xlabel = "Difference", ylabel = "Proportion of samples")
	hist!(ax, diffs, bins = range(-6, 6, step = 0.5), normalization = :pdf, label = "If Skeptic is Right")
	vlines!(ax, [obs], label = "Observed", linewidth = 2, color = :red)
	axislegend(ax, position = :lt)
	return fig, ax
end

fig, ax = plot_diffs(simulated_diffs, observed_diff)
fig
```

### Alternative

We could have done this with a parametric test

```{julia}
using HypothesisTests

t1 = HypothesisTests.EqualVarianceTTest(beer, water)
t2 = HypothesisTests.UnequalVarianceTTest(beer, water);

mean(simulated_diffs .>= observed_diff)
```